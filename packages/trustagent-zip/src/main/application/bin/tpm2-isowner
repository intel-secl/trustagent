#!/bin/bash
# WARNING:
# *** do NOT use TABS for indentation, use SPACES
# *** TABS will cause errors in some linux distributions

# trying to take the ownership with pre-defined password to determine if the ownershp is taken.

if [ "$#" -eq "0" ]; then
  echo "Usage: tpm2-isowner <ownerpass> [verbose]"
  exit 0
fi

ownerPasswd=$1
endorsePasswd=$1
lockPasswd=$1
tmpownerPasswd=abcd
tmpendorsePasswd=abcd
tmplockPasswd=abcd
verbose=$2

# try to see if tpm is owned
if [[ $verbose == verbose ]]; then
  tpm2_takeownership -o hex:$ownerPasswd -e hex:$endorsePasswd -l hex:$lockPasswd
else
  tpm2_takeownership -o hex:$ownerPasswd -e hex:$endorsePasswd -l hex:$lockPasswd > /dev/null
fi

if [[ $? != 0 ]];then
  # the above command failed, not the owner
  # then we check if we can change the passwd
  tpm2_takeownership -o hex:$tmpownerPasswd -e hex:$tmpendorsePasswd -l hex:$tmplockPasswd -O hex:$ownerPasswd -E hex:$endorsePasswd -L hex:$lockPasswd > /dev/null
  ret=$?
  if [[ "$ret" != 0 ]]; then
    # we are not the owner since we cannot change
    echo "0"
    exit 0
  else
    # we are the owner, change the passwd back to what it is
    tpm2_takeownership -o hex:$ownerPasswd -e hex:$endorsePasswd -l hex:$lockPasswd -O hex:$tmpownerPasswd -E hex:$tmpendorsePasswd -L hex:$tmplockPasswd > /dev/null
    echo "1"
    exit 0
  fi
  
else
  # the tpm is not owned by anyone since we can take the ownership
  # reset and return 0, we are not the owner yet
  tpm2_takeownership -O hex:$ownerPasswd -E hex:$endorsePasswd -L hex:$lockPasswd > /dev/null > /dev/null
  echo "0"
fi 
exit 0
